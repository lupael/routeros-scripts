#!rsc by RouterOS
# RouterOS script: ipsec-to-dns
# Copyright (c) 2021 Christian Hesse <mail@eworm.de>
# https://git.eworm.de/cgit/routeros-scripts/about/COPYING.md
#
# and add/remove/update DNS entries from IPSec mode-config
# https://git.eworm.de/cgit/routeros-scripts/about/doc/ipsec-to-dns.md

:local 0 "ipsec-to-dns";
:global GlobalFunctionsReady;
:while ($GlobalFunctionsReady != true) do={ :delay 500ms; }

:global Domain;
:global HostNameInZone;
:global Identity;
:global PrefixInZone;

:global CharacterReplace;
:global LogPrintExit2;
:global IfThenElse;

:local Zone \
  ([ $IfThenElse ($PrefixInZone = true) "ipsec." ] . \
   [ $IfThenElse ($HostNameInZone = true) ($Identity . ".") ] . $Domain);
:local Ttl 5m;
:local CommentPrefix ("managed by " . $0 . " for ");
:local CommentString ("--- " . $0 . " above ---");

:if ([ :len [ / ip dns static find where comment=$CommentString name=- type=NXDOMAIN disabled ] ] = 0) do={
  / ip dns static add comment=$CommentString name=- type=NXDOMAIN disabled=yes;
  $LogPrintExit2 warning $0 ("Added disabled static dns record with comment '" . $CommentString . "'.") false;
}
:local PlaceBefore ([ / ip dns static find where comment=$CommentString name=- type=NXDOMAIN disabled ]->0);

:foreach DnsRecord in=[ / ip dns static find where comment ~ $CommentPrefix ] do={
  :local DnsRecordVal [ / ip dns static get $DnsRecord ];
  :local PeerId [ $CharacterReplace ($DnsRecordVal->"comment") $CommentPrefix "" ];
  :if ([ :len [ / ip ipsec active-peers find where id=$PeerId dynamic-address=($DnsRecordVal->"address") ] ] > 0) do={
    $LogPrintExit2 debug $0 ("Peer " . $PeerId . " (" . $DnsRecordVal->"name" . ") still exists. Not deleting DNS entry.") false;
  } else={
    :local Found false;
    $LogPrintExit2 info $0 ("Peer " . $PeerId . " (" . $DnsRecordVal->"name" . ") has gone, deleting DNS entry.") false;
    / ip dns static remove $DnsRecord;
  }
}

:foreach Peer in=[ / ip ipsec active-peers find where !(dynamic-address=[]) ] do={
  :local PeerVal [ / ip ipsec active-peers get $Peer ];
  :local Comment ($CommentPrefix . $PeerVal->"id");
:put ($PeerVal->"id");
  :local HostName [ :pick ($PeerVal->"id") 0 [ :find ($PeerVal->"id" . ".") "." ] ];
:put $HostName;

  :local Fqdn ($HostName . "." . $Zone);
  :local DnsRecord [ / ip dns static find where name=$Fqdn ];
  :if ([ :len $DnsRecord ] > 0) do={
    :local DnsIp [ / ip dns static get $DnsRecord address ];
    :if ($DnsIp = $PeerVal->"dynamic-address") do={
      $LogPrintExit2 debug $0 ("DNS entry for " . $Fqdn . " does not need updating.") false;
    } else={
      $LogPrintExit2 info $0 ("Replacing DNS entry for " . $Fqdn . ", new address is " . $PeerVal->"dynamic-address" . ".") false;
      / ip dns static set name=$Fqdn address=($PeerVal->"dynamic-address") ttl=$Ttl comment=$Comment $DnsRecord;
    }
  } else={
    $LogPrintExit2 info $0 ("Adding new DNS entry for " . $Fqdn . ", address is " . $PeerVal->"dynamic-address" . ".") false;
    / ip dns static add name=$Fqdn address=($PeerVal->"dynamic-address") ttl=$Ttl comment=$Comment place-before=$PlaceBefore;
  }
}
